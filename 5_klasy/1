from liczby_zespolone import Complex
import re

while True: 
    print("Podaj rownianie w postaci: ((znak)Re(z1)(znak)Im(z1)j)operator((znak)Re(z2)(znak)Im(z2)j)")
    equation = input()
    print(equation)
    #foo = re.split('|) |(', equation)
    foo = re.findall('\[[^\]]*\]|\([^\)]*\)|\"[^\"]*\"|\S+', equation)    
    print(foo)
    '''
    #equation[2][:-1]
    #equation[
    print(foo[2][:-1])
    print(foo[5])

    foo[2] = foo[2][:-1]
    foo[7] = foo[7][:-1]
    
    float(foo[1])
    print(foo[1])
    float(foo[2])
    print(foo[2])
    float(foo[6])
    print(foo[6])
    float(foo[7])
    print(foo[7])
    a = Complex(foo[1], foo[2])
    b = Complex(foo[6], foo[7])
    c = Complex

    print(foo[4])

    if foo[4] == "+":
        c = a + b
    elif foo[4] == "-":
        c = a - b 
    elif foo[4] == "*":
        c = a * b 
    elif foo[4] == "/":
        c = a / b
    else:
        print("Error 404: operator not found")

    

    c.display()
    #equation = list(map(int, equation))

    #correctnessCheck
    #a = Complex(equation[1], equation[2])
    ''' 
    



